/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import cipher.Decryption;
import cipher.Encryption;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author Sithara wanigasooriy
 */
public class First extends javax.swing.JFrame {

    /**
     * Creates new form First
     */
    public First() {
        initComponents();
        setMinimumSize(new Dimension (50,100));
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        this.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        MainLabel = new javax.swing.JLabel();
        keyLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        KeyTextField = new javax.swing.JTextField();
        LocationTextField = new javax.swing.JTextField();
        encryptButton = new javax.swing.JButton();
        decryptButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        MainLabel.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 24)); // NOI18N
        MainLabel.setText("Product Cipher");

        keyLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        keyLabel.setText("Key");

        locationLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        locationLabel.setText("File Name");

        LocationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocationTextFieldActionPerformed(evt);
            }
        });

        encryptButton.setBackground(new java.awt.Color(0, 102, 102));
        encryptButton.setFont(new java.awt.Font("Segoe UI Symbol", 1, 12)); // NOI18N
        encryptButton.setForeground(new java.awt.Color(255, 255, 255));
        encryptButton.setText("Encrypt");
        encryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButtonActionPerformed(evt);
            }
        });

        decryptButton.setBackground(new java.awt.Color(0, 102, 102));
        decryptButton.setFont(new java.awt.Font("Segoe UI Symbol", 1, 12)); // NOI18N
        decryptButton.setForeground(new java.awt.Color(255, 255, 255));
        decryptButton.setText("Decrypt");
        decryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(keyLabel)
                .addGap(18, 18, 18)
                .addComponent(KeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(MainLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(locationLabel)
                        .addGap(18, 18, 18)
                        .addComponent(LocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(encryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addComponent(decryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(MainLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationLabel)
                    .addComponent(LocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decryptButton)
                    .addComponent(encryptButton))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButtonActionPerformed
        try{
            //file read
            FileReader fr = new FileReader(this.LocationTextField.getText()+".txt");
            BufferedReader br = new BufferedReader(fr);
            StringBuffer stringBuffer = new StringBuffer();
            String line = null;
            while((line =br.readLine())!=null){
 
                stringBuffer.append(line);
            }
    
            
            br.close();
            Encryption encryption = new Encryption();
            String first=encryption.breakTheStringEncryption(encryption.encryptUsingKey(getSumOfAscII(KeyTextField.getText().toString()),encryption.primePlacesEncrypt(stringBuffer.toString())));
            
            ArrayList<ArrayList<Character>> encrypted = encryption.permutationOutsideBlockEncryption(encryption.permutationWithinBlocksEncryption(first));
            System.out.println(concatinateArray(encrypted)); 
            String firstFirst=concatinateArray(encrypted);
            
            //file write
            FileWriter fw = new FileWriter("encryption.txt");
            PrintWriter pw = new PrintWriter(fw);
            pw.print(firstFirst);
            pw.close();
            JOptionPane.showMessageDialog(null, "Successfuly Ecrypted", "Success", JOptionPane.INFORMATION_MESSAGE);
            
        }catch (IOException e){
            System.out.println("File not found");
            JOptionPane.showMessageDialog(null, "File not found\n Try again!!", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        
        new First().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_encryptButtonActionPerformed

    private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButtonActionPerformed
       try{
            //file read
            FileReader fr = new FileReader(this.LocationTextField.getText()+".txt");
            
            
            BufferedReader br = new BufferedReader(fr);
            StringBuffer stringBuffer = new StringBuffer();
            String line = null;
            while((line =br.readLine())!=null){
 
                stringBuffer.append(line);
            }
            br.close();
        
        Decryption decryption = new Decryption();
        String second = decryption.permutationInsideBlockDecryption(decryption.permutationOutsideBlockDecryption(stringBuffer.toString()));
        
        String secondSecond1 = decryption.keyUsingDecrypt(getSumOfAscII(this.KeyTextField.getText()),decryption.fixedTheBreakedString(second));
        String secondSecond=decryption.decrptPrimePlaces(secondSecond1);
        //file write
            FileWriter fw = new FileWriter("decryption.txt");
            PrintWriter pw = new PrintWriter(fw);
            pw.print(secondSecond);
            pw.close();
            JOptionPane.showMessageDialog(null, "Successfuly Decrypted", "Success", JOptionPane.INFORMATION_MESSAGE);
            
        }catch (IOException e){
            System.out.println("File not found");
            JOptionPane.showMessageDialog(null, "File not found\nTry Again!!", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
        new First().setVisible(true);
        this.setVisible(false);
        
        
        
        
    }                                             

    private void KeyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:                             
    }//GEN-LAST:event_decryptButtonActionPerformed

    private void LocationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LocationTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(First.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(First.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(First.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(First.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new First().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField KeyTextField;
    private javax.swing.JTextField LocationTextField;
    private javax.swing.JLabel MainLabel;
    private javax.swing.JButton decryptButton;
    private javax.swing.JButton encryptButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel keyLabel;
    private javax.swing.JLabel locationLabel;
    // End of variables declaration//GEN-END:variables

public static String concatinateArray(ArrayList<ArrayList<Character>> finalArray){
        String finalString="";
        for(int i=0;i<finalArray.size();i++){
            for(char k:finalArray.get(i)){
                finalString+=k;
            }
        }
        System.out.println(finalString);
        return finalString;
    }
    
    public static int getSumOfAscII(String expecting){
        //this will return sum of ascii value of given string
        int keyValue= 0;
        
        for (int i = 0;i<expecting.length();i++){
            char c =expecting.charAt(i);
            System.out.println((int) c+"key"+c );
            keyValue+=(int) c ;            
        }
        System.out.println(keyValue+"keyValue");
        return keyValue;
    }
}
